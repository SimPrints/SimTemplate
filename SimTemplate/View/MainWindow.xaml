<Window x:Class="SimTemplate.View.MainWindow.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:SimTemplate.ViewModel;assembly="
        xmlns:view="clr-namespace:SimTemplate.View;assembly="
        xmlns:local="clr-namespace:SimTemplate.ViewModel;assembly="
        xmlns:conv="clr-namespace:SimTemplate.ViewModel.Converters;assembly="
        mc:Ignorable="d"
        x:Name="mainWindow"
        Title="MainWindow" Height="525" Width="525"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <!--Converters-->
        <conv:EnumToDescriptionConverter x:Key="EnumToDescriptionConverter" />
        <conv:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <conv:BooleanToOppositeBooleanConverter x:Key="BooleanToOppositeBooleanConverter" />
        <conv:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
        <conv:RadToDegConverter x:Key="RadToDegConverter" />
        <conv:MultiplyConverter x:Key="MultiplyConverter" />
        <conv:ScaleConverter x:Key="ScaleConverter" />
        <conv:NullImageConverter x:Key="NullImageConverter" />

        <!--Values-->
        <sys:Double x:Key="minutiaLineLength">15</sys:Double>
        <sys:Double x:Key="minutiaDiameter">40</sys:Double>
        <sys:String x:Key="defaultLoadIcon">"pack://application:,,,/Resources/Icons/Load.ico"</sys:String>
        <SolidColorBrush x:Key="simPrintsBlueBrush" Color="#498BCA"/>
        <SolidColorBrush x:Key="minutiaBorderBrush" Color="White"/>

        <!-- Styles -->
        <!-- Toolbar Styles-->
        <Style x:Key="baseStyle">
            <Setter Property="TextBlock.FontSize" Value="12" />
            <Setter Property="TextBlock.FontFamily" Value="Calibri" />
            <Setter Property="FrameworkElement.Margin" Value="2.5, 0, 0, 2.5" />
        </Style>
        <Style x:Key="toolbarStackStyle">
            <Setter Property="FrameworkElement.Margin" Value="0, 5, 0, 5" />
        </Style>
        <Style x:Key="iconsStyle" TargetType="Button">
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Margin" Value="2.5" />
        </Style>
        <Style x:Key="controlTextStyle" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextBlock.FontSize" Value="10" />
        </Style>
        <Style x:Key="toolsTitleStyle" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
        </Style>
        <Style x:Key="toolsSectionStyle" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
        </Style>
        <!--Templating Styles-->
        <Style x:Key="minutiaBorderStyle">
            <Setter Property="Border.BorderThickness" Value="0,2" />
            <Setter Property="Border.BorderBrush" Value="{StaticResource minutiaBorderBrush}" />
        </Style>
        <Style x:Key="minutiaShapeStyle">
            <Setter Property="Shape.Stroke" Value="{StaticResource simPrintsBlueBrush}" />
                <Setter Property="Shape.StrokeThickness" Value="6" />
        </Style>
        <Style x:Key="minutiaLineStyle" BasedOn="{StaticResource minutiaShapeStyle}">
            <Setter Property="Line.X1" Value="0" />
            <Setter Property="Line.X2" Value="0" />
            <Setter Property="Line.Y1" Value="{Binding Source={StaticResource minutiaDiameter},
                Converter={StaticResource MultiplyConverter},
                ConverterParameter=0.5}" />
            <Setter Property="Line.Y2" Value="30" />
        </Style>

        <!-- Data Templates -->
        <DataTemplate x:Key="headerTemplate">
            <TextBlock Text="{Binding}"
                       Style="{StaticResource toolsTitleStyle}"/>
        </DataTemplate>
        <DataTemplate x:Key="sectionTemplate">
            <TextBlock Text="{Binding}"
                       Style="{StaticResource toolsSectionStyle}"/>
        </DataTemplate>
    </Window.Resources>
    
    <!--InputBindings-->
    <Window.InputBindings>
        <KeyBinding Key="t" Command="{Binding TerminationButtonPressCommand}"/>
        <KeyBinding Key="b" Command="{Binding BifuricationButtonPressCommand}"/>
        <KeyBinding Key="Esc" Command="{Binding EscapePressCommand}"/>
    </Window.InputBindings>
    
    <!---BEGIN WINDOW CONTENT-->
    <!--Side Panel (Controls)-->
    <DockPanel x:Name="sidePanel">
        <ToolBarTray DockPanel.Dock="Left" Orientation="Vertical"
                     HorizontalAlignment="Center" VerticalAlignment="Stretch">
            <!-- Data Toolbar -->
            <ToolBar x:Name="dataToolbar">
                <GroupBox Header="Data Tools"
                          HeaderTemplate="{StaticResource headerTemplate}">
                    <StackPanel Style="{StaticResource toolbarStackStyle}" Orientation="Vertical">
                        <!-- Load/Save buttons -->
                        <StackPanel Style="{StaticResource toolbarStackStyle}" Orientation="Horizontal">
                            <Button x:Name="saveTemplate"
                            VerticalAlignment="Top"
                            ToolTip="Saves the current template"
                            Style="{StaticResource iconsStyle}"
                            Command="{Binding Path=SaveTemplateCommand}">
                                <Image Source="pack://application:,,,/Resources/Icons/Save.ico" />
                            </Button>
                            <Button x:Name="loadFile"
                            VerticalAlignment="Top"
                            ToolTip="Loads the next capture for templating"
                            Style="{StaticResource iconsStyle}"
                            Command="{Binding Path=LoadFileCommand}">
                                <Image Source="{Binding Path=LoadIcon, TargetNullValue={StaticResource defaultLoadIcon}}"/>
                            </Button>
                        </StackPanel>
                        <Expander Name="myExpander" Header="Load Options" 
                                  ExpandDirection="Down" IsExpanded="True"
                                  HeaderTemplate="{StaticResource sectionTemplate}"> 
                            <StackPanel Orientation="Vertical">
                                <!-- Scanner type dropdown -->
                                <StackPanel Style="{StaticResource toolbarStackStyle}">
                                    <Label Style="{StaticResource controlTextStyle}">Scanner Type:</Label>
                                    <ComboBox x:Name="scannerTypeComboBox" VerticalAlignment="Top"
                                    Width="100"
                                    ItemsSource="{Binding Path=ScannerTypes}"
                                    SelectedItem="{Binding Path=FilteredScannerType}"
                                      ToolTip="Load a capture from a specific scanner.">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionConverter}}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </GroupBox>
                <!-- Templating Group -->
                <GroupBox Header="Templating Tools"
                          HeaderTemplate="{StaticResource headerTemplate}">
                    <!-- Minutia Type radiobuttons -->
                <StackPanel Style="{StaticResource toolbarStackStyle}">
                    <TextBlock Style="{StaticResource controlTextStyle}">Minutia Type:</TextBlock>
                    <RadioButton IsChecked="{Binding Path=InputMinutiaType,
                        Converter={StaticResource EnumToBooleanConverter},
                        ConverterParameter={x:Static model:MinutiaType.Termination}}"
                                 IsEnabled="{Binding Path=IsTemplating}"
                                 GroupName="inputMinutiaType"
                                 ToolTip="Record a termination (T)">
                        Termination
                    </RadioButton>
                    <RadioButton IsChecked="{Binding Path=InputMinutiaType,
                        Converter={StaticResource EnumToBooleanConverter},
                        ConverterParameter={x:Static model:MinutiaType.Bifurication}}"
                                 IsEnabled="{Binding Path=IsTemplating}"
                                 GroupName="inputMinutiaType"
                                 ToolTip="Record a bifurication (B)">
                        Bifurication
                    </RadioButton>
                </StackPanel>
                </GroupBox>
            </ToolBar>
        </ToolBarTray>
        <!-- Guidance Text -->
        <TextBlock x:Name="promptBanner" Text="{Binding Path=PromptText}" DockPanel.Dock="Top"
                   TextAlignment="Center" FontSize="30" Foreground="{StaticResource simPrintsBlueBrush}"
                   Style="{StaticResource baseStyle}"/>
        
        <!-- MAIN CONTENT -->
        <Grid Margin="20">
            <!--Status image sometimes shown-->
            <Image x:Name="statusImage"
                   Source="{Binding StatusImage, Converter={StaticResource NullImageConverter}}"
                   Stretch="Uniform"
                   Panel.ZIndex="2"/>
            <!--The image being annotated-->
            <Image x:Name="image"
                   Source="{Binding Capture.ImageData, Converter={StaticResource NullImageConverter}}"
                   Stretch="Uniform"
                   SizeChanged="image_SizeChanged"
                   Panel.ZIndex="0"/>
            <!--The control on which to display the annotations-->
            <ItemsControl x:Name="templatingItemsControl"
                          ItemsSource="{Binding Minutae}"
                          Width="{Binding ElementName=image, Path=ActualWidth}"
                          Height="{Binding ElementName=image, Path=ActualHeight}"
                          Panel.ZIndex="1">
                <!-- Set the 'panel' to be a Canvas for displaying our items -->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas x:Name="templatingCanvas"
                                MouseMove="templatingCanvas_MouseMove"
                                MouseUp="templatingCanvas_MouseUp"
                                Background="Transparent" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <!-- Set Items to be interpreted as Ellipse and Line shapes -->
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas>
                            <Ellipse x:Name="point"
                                        Width="5"
                                        Height="5"
                                        Canvas.Top="{Binding RelativeSource={x:Static RelativeSource.Self},
                                Path=Height, Converter={StaticResource MultiplyConverter},
                                ConverterParameter=-0.5}"
                                        Canvas.Left="{Binding RelativeSource={x:Static RelativeSource.Self},
                                Path=Width, Converter={StaticResource MultiplyConverter},
                                ConverterParameter=-0.5}"
                                        Fill="{StaticResource simPrintsBlueBrush}"
                                        Style="{StaticResource minutiaShapeStyle}"/>
                            <Ellipse x:Name="ellipse"
                                            Width="{StaticResource minutiaDiameter}"
                                            Height="{StaticResource minutiaDiameter}"
                                            Canvas.Top="{Binding RelativeSource={x:Static RelativeSource.Self},
                                    Path=Height, Converter={StaticResource MultiplyConverter},
                                    ConverterParameter=-0.5}"
                                            Canvas.Left="{Binding RelativeSource={x:Static RelativeSource.Self},
                                    Path=Width, Converter={StaticResource MultiplyConverter},
                                    ConverterParameter=-0.5}"
                                            Fill="Transparent"
                                            MouseDown="Minutia_MouseDown"
                                            MouseUp="Minutia_MouseUp"
                                            Style="{StaticResource minutiaShapeStyle}"/>
                            <Line Style="{StaticResource minutiaLineStyle}">
                                <Line.RenderTransform>
                                    <RotateTransform Angle="90"/>
                                </Line.RenderTransform>
                            </Line>
                            <Line Style="{StaticResource minutiaLineStyle}"
                                    Visibility="{Binding Path=Type,
                                Converter={StaticResource EnumToVisibilityConverter},
                                ConverterParameter={x:Static model:MinutiaType.Bifurication}}">
                                <Line.RenderTransform>
                                    <RotateTransform Angle="225"/>
                                </Line.RenderTransform>
                            </Line>
                            <Line Style="{StaticResource minutiaLineStyle}"
                                  Visibility="{Binding Path=Type,
                                Converter={StaticResource EnumToVisibilityConverter},
                                ConverterParameter={x:Static model:MinutiaType.Bifurication}}">
                                <Line.RenderTransform>
                                    <RotateTransform Angle="315"/>
                                </Line.RenderTransform>
                            </Line>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <!--Style the container for an item (Ellipse) to fit it in the panel-->
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Top">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource ScaleConverter}"
                                              Mode="OneWay">
                                    <Binding Path="Position.Y" />
                                    <Binding ElementName="mainWindow" Path="Scale.Y" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Canvas.Left">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource ScaleConverter}"
                                              Mode="OneWay">
                                    <Binding Path="Position.X"/>
                                    <Binding ElementName="mainWindow" Path="Scale.X" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Canvas.RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="{Binding Angle}"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </Grid>
    </DockPanel>
</Window>
