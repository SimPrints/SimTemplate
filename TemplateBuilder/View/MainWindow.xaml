<Window x:Class="TemplateBuilder.View.MainWindow.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:TemplateBuilder.Model;assembly="
        xmlns:view="clr-namespace:TemplateBuilder.View;assembly="
        xmlns:local="clr-namespace:TemplateBuilder.ViewModel;assembly="
        xmlns:conv="clr-namespace:TemplateBuilder.ViewModel.Converters;assembly="
        mc:Ignorable="d"
        x:Name="mainWindow"
        Title="MainWindow" Height="525" Width="525">

    <Window.Resources>
        <conv:EnumToDescriptionConverter x:Key="EnumToDescriptionConverter" />
        <conv:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <conv:BooleanToOppositeBooleanConverter x:Key="BooleanToOppositeBooleanConverter" />
        <conv:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
        <conv:RadToDegConverter x:Key="RadToDegConverter" />
        <conv:MultiplyConverter x:Key="MultiplyConverter" />
        <conv:ScaleConverter x:Key="ScaleConverter" />
        
        <!-- Styles -->
        <Style x:Key="baseStyle">
            <Setter Property="TextBlock.FontSize" Value="12" />
            <Setter Property="TextBlock.FontFamily" Value="Calibri" />
            <Setter Property="FrameworkElement.Margin" Value="2.5, 0, 0, 2.5" />
        </Style>
        <Style x:Key="toolbarStackStyle">
            <Setter Property="FrameworkElement.Margin" Value="0, 5, 0, 5" />
        </Style>
        <Style x:Key="iconsStyle" TargetType="Button">
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Margin" Value="2.5" />
        </Style>
        <Style x:Key="controlTextStyle" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextBlock.FontSize" Value="10" />
        </Style>
        <Style x:Key="toolbarTitleStyle" BasedOn="{StaticResource baseStyle}">
            <Setter Property="TextBlock.FontWeight" Value="Bold" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="t" Command="{Binding TerminationButtonPressCommand}"/>
        <KeyBinding Key="b" Command="{Binding BifuricationButtonPressCommand}"/>
        <KeyBinding Key="Esc" Command="{Binding EscapePressCommand}"/>
    </Window.InputBindings>

    <DockPanel x:Name="sidePanel">
        <ToolBarTray DockPanel.Dock="Left" Orientation="Vertical"
                     HorizontalAlignment="Center" VerticalAlignment="Stretch">
            <!-- Data Toolbar -->
            <ToolBar x:Name="dataToolbar">
                <TextBlock Style="{StaticResource toolbarTitleStyle}">Data Toolbar</TextBlock>
                <!-- Load/Save buttons -->
                <StackPanel Style="{StaticResource toolbarStackStyle}" Orientation="Horizontal">
                    <Button x:Name="saveTemplate"
                            VerticalAlignment="Top"
                            ToolTip="Saves the current template"
                            Style="{StaticResource iconsStyle}"
                            Command="{Binding Path=SaveTemplateCommand}">
                        <Image Source="pack://application:,,,/Resources/Save.ico" />
                    </Button>
                    <Button x:Name="loadFile"
                            VerticalAlignment="Top"
                            ToolTip="Loads the next capture for templating"
                            Style="{StaticResource iconsStyle}"
                            Command="{Binding Path=LoadFileCommand}">
                        <Image Source="pack://application:,,,/Resources/Load.ico" />
                    </Button>
                </StackPanel>
                <!-- Scanner type dropdown -->
                <StackPanel Style="{StaticResource toolbarStackStyle}">
                    <TextBlock Style="{StaticResource controlTextStyle}">Scanner Type:</TextBlock>
                    <ComboBox x:Name="scannerTypeComboBox" VerticalAlignment="Top"
                            Width="100"
                            ItemsSource="{Binding Path=ScannerTypes}"
                            SelectedItem="{Binding Path=FilteredScannerType}"
                              ToolTip="Load a capture from a specific scanner">
                        <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumToDescriptionConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <!-- Template status radiobuttons -->
                <StackPanel Style="{StaticResource toolbarStackStyle}">
                    <TextBlock Style="{StaticResource controlTextStyle}">Template Status:</TextBlock>
                    <RadioButton x:Name="getTemplatedCaptureButton" GroupName="isGetTemplatedCapture"
                                 IsChecked="{Binding Path=IsGetTemplatedCapture}"
                                 ToolTip="Load a capture that already has a template">
                        Templated
                    </RadioButton>
                    <RadioButton x:Name="getUntemplatedCaptureButton" GroupName="isGetTemplatedCapture"
                                 IsChecked="{Binding Path=IsGetTemplatedCapture, Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                                 ToolTip="Load a capture that has not yet got a template">
                        Untemplated
                    </RadioButton>
                </StackPanel>
            </ToolBar>
            <!-- Templating Toolbar -->
            <ToolBar x:Name="templatingToolbar" VerticalAlignment="Bottom">
                <TextBlock Style="{StaticResource toolbarTitleStyle}">Templating Toolbar</TextBlock>
                <!-- Minutia Type radiobuttons -->
                <StackPanel Style="{StaticResource toolbarStackStyle}">
                    <TextBlock Style="{StaticResource controlTextStyle}">Minutia Type:</TextBlock>
                    <RadioButton IsChecked="{Binding Path=InputMinutiaType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static model:MinutiaType.Termination}}"
                                 IsEnabled="{Binding Path=IsTemplating}"
                                 GroupName="inputMinutiaType"
                                 ToolTip="Record a termination (T)">
                        Termination
                    </RadioButton>
                    <RadioButton IsChecked="{Binding Path=InputMinutiaType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static model:MinutiaType.Bifurication}}"
                                 IsEnabled="{Binding Path=IsTemplating}"
                                 GroupName="inputMinutiaType"
                                 ToolTip="Record a bifurication (B)">
                        Bifurication
                    </RadioButton>
                </StackPanel>
            </ToolBar>
        </ToolBarTray>
        <!-- Guidance Text -->
        <TextBlock x:Name="promptBanner" Text="{Binding Path=PromptText}" DockPanel.Dock="Top"
                   TextAlignment="Center" FontSize="30" Foreground="Red"
                   Style="{StaticResource baseStyle}"/>
        <!-- Main Content -->
        <Grid Margin="0,51,0,0"
              MouseMove="itemsControl_MouseMove"
              MouseUp="itemsControl_MouseUp">
            <!--The image being annotated-->
            <Image x:Name="statusImage"
                   Source="{Binding StatusImage}" Stretch="Uniform" />
            <!--The image being annotated-->
            <Image x:Name="image"
                   Source="{Binding Capture.ImageData}" Stretch="Uniform"
                   SizeChanged="image_SizeChanged" />
            <!--The control on which to display the annotations-->
            <ItemsControl x:Name="itemsControl"
                          ItemsSource="{Binding Minutae}"
                          Width="{Binding ElementName=image, Path=ActualWidth}"
                          Height="{Binding ElementName=image, Path=ActualHeight}">
                <!-- Set the 'panel' to be a Canvas for displaying our items -->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas x:Name="itemsControlCanvas" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <!-- Set Items to be interpreted as Ellipse and Line shapes -->
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas>
                            <Ellipse x:Name="point"
                                     Width="5" Height="5"
                                     Canvas.Top="-2.5"
                                     Canvas.Left="-2.5"
                                     Fill="Red" />
                            <Ellipse x:Name="ellipse"
                                     Width="30" Height="30"
                                     Canvas.Top="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Height, Converter={StaticResource MultiplyConverter}, ConverterParameter=-0.5}"
                                     Canvas.Left="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Width, Converter={StaticResource MultiplyConverter}, ConverterParameter=-0.5}"
                                     Fill="Transparent" Stroke="Black" StrokeThickness="4"
                                     MouseDown="Minutia_MouseDown"
                                     MouseUp="Minutia_MouseUp" />
                            <Line X1="0" X2="0"
                                  Y1="{Binding ElementName=ellipse, Path=Height, Converter={StaticResource MultiplyConverter}, ConverterParameter=0.5}"
                                  Y2="30"
                                  Stroke="Black" StrokeThickness="4">
                                <Line.RenderTransform>
                                    <RotateTransform Angle="90"/>
                                </Line.RenderTransform>
                            </Line>
                            <Line X1="0" X2="0"
                                  Y1="{Binding ElementName=ellipse, Path=Height, Converter={StaticResource MultiplyConverter}, ConverterParameter=0.5}"
                                  Y2="30"
                                  Stroke="Black" StrokeThickness="4"
                                  Visibility="{Binding Path=Type, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static model:MinutiaType.Bifurication}}">
                                <Line.RenderTransform>
                                    <RotateTransform Angle="225"/>
                                </Line.RenderTransform>
                            </Line>
                            <Line X1="0" X2="0"
                                  Y1="{Binding ElementName=ellipse, Path=Height, Converter={StaticResource MultiplyConverter}, ConverterParameter=0.5}"
                                  Y2="30"
                                  Stroke="Black" StrokeThickness="4"
                                  Visibility="{Binding Path=Type, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static model:MinutiaType.Bifurication}}">
                                <Line.RenderTransform>
                                    <RotateTransform Angle="315"/>
                                </Line.RenderTransform>
                            </Line>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <!--Style the container for an item (Ellipse) to fit it in the panel-->
                <ItemsControl.ItemContainerStyle>
                    <!--It is necessary to set the TargetType so that XAML compiler knows RenderTransform is a viable setting-->
                    <Style>
                        <Setter Property="Canvas.Top">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource ScaleConverter}"
                                              Mode="OneWay">
                                    <Binding Path="Position.Y"/>
                                    <Binding Path="DataContext.Scale.Y"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Canvas.Left">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource ScaleConverter}"
                                              Mode="OneWay">
                                    <Binding Path="Position.X"/>
                                    <Binding Path="DataContext.Scale.X"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Canvas.RenderTransform">
                            <Setter.Value>
                                <RotateTransform Angle="{Binding Angle}"/>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </Grid>
    </DockPanel>
</Window>
